#!ipxe

# Set background picture
# console --picture http://192.168.85.235/tftp/ipxe/bg.png --left 400 --right 840 --top 220 --bottom 220

# Figure out if client is 64-bit capable
cpuid --ext 29 && set arch x64 || set arch x86
cpuid --ext 29 && set archb 64 || set archb 32
cpuid --ext 29 && set archl amd64 || set archl i386

# Some menu defaults
# set menu-timeout 0 if no client-specific settings found
isset ${menu-timeout} || set menu-timeout 0
set submenu-timeout ${menu-timeout}
isset ${menu-default} || set menu-default WinPEISO

###################### MAIN MENU --${platform}--${ip} ##########################

:start
# menu iPXE boot menu for ${manufacturer} ${product} (${archb}bit)
menu iPXE boot menu for ${ip} ${product} (${archb}bit)
item --gap --             ------------------------- Operating Systems -------------------------
item ArchLinux            Arch Linux       2024.01.01
item Manjaro              Manjaro Linux    kde-23.1.2-minimal
item WinPEISO             Windows 10 PE    2004         1.22G
item Win11PEISO           Windows 11 PE    22631         375M
item USBOX_V7             Windows 11 PE    USBOX_V7     1.89G
item --gap --             ------------------- Internet Network Boot Service -------------------
item archbfsu             Arch Linux      (latest, live, bfsu)
item openSUSEstable       openSUSE stable (installation, bfsu)
item ustc                 USTC Network Boot Service
item --gap --             ------------------------- Advanced Options --------------------------
item memtest_uefi         Memtest86+
item --key c config       Configure settings
item bootdisk             Boot from local disk
item shell                iPXE shell
item reboot               Reboot
item --key x exit         Exit iPXE and continue BIOS boot

choose --timeout ${menu-timeout} --default ${menu-default} selected || goto cancel
set menu-timeout 0
goto ${selected}

:cancel
echo You cancelled the menu, dropping you to a shell

:shell
echo Type 'exit' to get the back to the menu
shell
set menu-timeout 0
set submenu-timeout 0
goto start

:bootdisk
sanboot --no-describe --drive 0x80

:failed
echo Booting failed, dropping to shell
goto shell

:reboot
reboot

:exit
exit

:config
config
goto start

:back
set submenu-timeout 0
clear submenu-default
goto start

############ MAIN MENU ITEMS ############

:failed_download
echo
echo Failed to download a file.
echo Press a key to return to the menu.
prompt
imgfree
goto start

:failed_boot
echo
echo Boot failed.
echo Press a key to return to the menu.
prompt
imgfree
goto start

:WinPEISO
sanboot --no-describe ${os-url}/Windows10PE_2004.iso || goto failed
goto start

:Win11PEISO
sanboot --no-describe ${os-url}/Windows11PE64-22631.2861.iso || goto failed
goto start

:USBOX_V7
sanboot --no-describe ${os-url}/USBOX_V7.iso || goto failed
goto start

:ArchLinux
set release 2024.01.01
set SP_ARCH_MIRROR https://mirrors.ustc.edu.cn/archlinux
set extrabootoptions ip=dhcp net.ifnames=0 BOOTIF=01-${netX/mac} mirror=${SP_ARCH_MIRROR}
kernel ${os-url}/archlinux/${release}/arch/boot/x86_64/vmlinuz-linux || goto failed_download
initrd ${os-url}/archlinux/${release}/arch/boot/amd-ucode.img || goto failed_download
initrd ${os-url}/archlinux/${release}/arch/boot/intel-ucode.img || goto failed_download
initrd ${os-url}/archlinux/${release}/arch/boot/x86_64/initramfs-linux.img || goto failed_download
imgargs vmlinuz-linux initrd=amd-ucode.img initrd=intel-ucode.img initrd=initramfs-linux.img archiso_http_srv=${os-url}/archlinux/${release}/ archisobasedir=arch cms_verify=y ${extrabootoptions}
boot || goto failed_boot

:archbfsu
set release latest
set mirror http://mirror.bfsu.edu.cn/archlinux
set extrabootoptions ip=dhcp net.ifnames=0 BOOTIF=01-${netX/mac} mirror=${mirror}
kernel ${mirror}/iso/${release}/arch/boot/x86_64/vmlinuz-linux || goto failed_download
initrd ${mirror}/iso/${release}/arch/boot/amd-ucode.img || goto failed_download
initrd ${mirror}/iso/${release}/arch/boot/intel-ucode.img || goto failed_download
initrd ${mirror}/iso/${release}/arch/boot/x86_64/initramfs-linux.img || goto failed_download
imgargs vmlinuz-linux initrd=amd-ucode.img initrd=intel-ucode.img initrd=initramfs-linux.img archiso_http_srv=${mirror}/iso/${release}/ archisobasedir=arch cms_verify=y ${extrabootoptions}
boot || goto failed_boot

:Manjaro
set murl ${os-url}/manjaro-kde-23.1.2-minimal-240102-linux66
set SP_ARCH_MIRROR https://mirrors.ustc.edu.cn/manjaro
set extrabootoptions ip=dhcp net.ifnames=0 BOOTIF=01-${netX/mac} mirror=${SP_ARCH_MIRROR} driver=nonfree nouveau.modeset=0 i915.modeset=1 radeon.modeset=1
kernel ${murl}/boot/vmlinuz-x86_64 || goto failed_download
initrd ${murl}/boot/amd_ucode.img || goto failed_download
initrd ${murl}/boot/intel_ucode.img || goto failed_download
initrd ${murl}/boot/initramfs-x86_64.img || goto failed_download
imgargs vmlinuz-x86_64 initrd=amd_ucode.img initrd=intel_ucode.img initrd=initramfs-x86_64.img miso_http_srv=${murl}/ ${extrabootoptions}
boot || goto failed_boot

:openSUSElive
set release 2024.01.01
set os openSUSE-Leap-15.5-KDE-Live-x86_64-Media
kernel ${os-url}/${os}/boot/x86_64/loader/linux
initrd ${os-url}/${os}/boot/x86_64/loader/initrd
imgargs linux initrd=initrd ip=dhcp splash=silent quiet systemd.show_status=yes root=live:${os-url}/${os}/LiveOS/squashfs.img rd.kiwi.live.pxe rd.live.overlay.persistent rd.live.overlay.cowfs=ext4
boot || goto failed_boot

:openSUSEcurrent
set mirror http://mirror.bfsu.edu.cn/opensuse
set base-url ${mirror}/distribution/openSUSE-current/repo/oss
kernel ${base-url}/boot/x86_64/loader/linux || goto failed_download
initrd ${base-url}/boot/x86_64/loader/initrd || goto failed_download
imgargs linux initrd=initrd install=${base-url} hostip=${net0/ip} netmask=${net0/netmask} gateway=${net0/gateway} nameserver=${dns}
boot || goto failed_boot

:openSUSEstable
set mirror http://mirror.bfsu.edu.cn/opensuse
set base-url ${mirror}/distribution/openSUSE-stable/repo/oss
kernel ${base-url}/boot/x86_64/loader/linux || goto failed_download
initrd ${base-url}/boot/x86_64/loader/initrd || goto failed_download
imgargs linux initrd=initrd install=${base-url} hostip=${net0/ip} netmask=${net0/netmask} gateway=${net0/gateway} nameserver=${dns}
boot || goto failed_boot

:ustc
chain ${http-url}/ustc.efi